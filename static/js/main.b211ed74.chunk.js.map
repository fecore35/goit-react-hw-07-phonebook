{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccesses","addContactError","deleteContactRequest","deleteContactSuccesses","deleteContactError","changeFilter","getContactsAsync","createAsyncThunk","a","axios","get","response","contacts","data","itemsReducer","createReducer","fulfilled","_","action","payload","state","filter","item","id","isLoading","pending","rejected","itemsError","filterReducer","contactsReducer","combineReducers","items","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","next","console","log","store","configureStore","reducer","devTools","getContacts","getFilter","getVisibleContacts","search","toUpperCase","contact","name","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","handlerChange","event","target","value","className","s","form","onSubmit","e","preventDefault","newContactName","find","alert","newContact","phone","actions","fetch","method","headers","body","JSON","stringify","then","json","catch","label","type","input","pattern","title","required","onChange","button","Filter","container","ContactList","visibleContacts","useEffect","list","map","tel","replace","href","onClick","deleteContact","currentTarget","dataset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b211ed74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","import { createAction } from \"@reduxjs/toolkit\";\n\n/* Get */\nexport const getContactsRequest = createAction(\"contacts/GetContactsRequest\");\nexport const getContactsSuccesses = createAction(\n  \"contacts/GetContactsSuccesses\"\n);\nexport const getContactsError = createAction(\"contacts/GetContactsError\");\n\n/* Create */\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccesses = createAction(\"contacts/addContactSuccesses\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\n/* Delete */\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccesses = createAction(\n  \"contacts/deleteContactSuccesses\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const createContact = createAction(\"contacts/Create\");\nexport const changeFilter = createAction(\"contacts/Filter\");\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport * as actions from \"redux/contacts/contacts-action\";\n\nexport const getContactsAsync = createAsyncThunk(\n  \"contacts/addContact\",\n  async () => {\n    const response = await axios.get(\n      \"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\"\n    );\n    const contacts = response.data;\n    return contacts;\n  }\n);\n\n// export const getContacts = () => (dispatch) => {\n//   dispatch(actions.getContactsRequest());\n\n//   fetch(\"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\")\n//     .then((data) => data.json())\n//     .then((data) => {\n//       dispatch(actions.getContactsSuccesses(data));\n//     })\n//     .catch((error) => dispatch(actions.getContactsError(error)));\n// };\n\nexport const addContact = (contact) => (dispatch) => {\n  dispatch(actions.addContactRequest());\n  console.log(contact);\n\n  fetch(\"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify(contact),\n  })\n    .then((data) => data.json())\n    .then((data) => {\n      dispatch(actions.addContactSuccesses(data));\n    })\n    .catch((error) => {\n      dispatch(actions.addContactError(error));\n    });\n};\n\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n\n  fetch(`https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts/${id}`, {\n    method: \"DELETE\",\n  })\n    .then((data) => data.json())\n    .then((data) => {\n      console.log(data);\n      dispatch(actions.deleteContactSuccesses(data));\n    })\n    .catch((error) => dispatch(actions.deleteContactError(error)));\n};\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  getContactsRequest,\n  getContactsSuccesses,\n  getContactsError,\n  addContactRequest,\n  addContactSuccesses,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccesses,\n  deleteContactError,\n  changeFilter,\n} from \"../contacts/contacts-action\";\n\nimport { getContactsAsync } from \"redux/contacts/contacts-operation\";\n\nconst itemsReducer = createReducer([], {\n  /* Get */\n  [getContactsAsync.fulfilled]: (_, action) => [...action.payload],\n\n  /* Create */\n  [addContactSuccesses]: (state, action) => [...state, action.payload],\n\n  /* Delete */\n  [deleteContactSuccesses]: (state, action) =>\n    state.filter((item) => item.id !== action.payload.id),\n});\n\nconst isLoading = createReducer(false, {\n  /* Get */\n  [getContactsAsync.pending]: () => true,\n  [getContactsAsync.fulfilled]: () => false,\n  [getContactsAsync.rejected]: () => false,\n\n  /* Create */\n  [addContactRequest]: () => true,\n  [addContactSuccesses]: () => false,\n  [addContactError]: () => false,\n\n  /* Delete */\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccesses]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst itemsError = createReducer(null, {\n  [getContactsAsync.rejected]: (_, action) => action.payload,\n  [deleteContactError]: (_, action) => action.payload,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (state, action) => action.payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading,\n  error: itemsError,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\n\nconst firstMiddleware = (state) => (next) => (action) => {\n  console.log(\"firstMiddleware-> \", action);\n  next(action);\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  firstMiddleware,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: true ?? process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","export const getContacts = (state) => state.contacts.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const search = filter.toUpperCase();\n  return contacts.filter((contact) =>\n    contact.name.toUpperCase().includes(search)\n  );\n};\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createContact } from \"redux/contacts/contacts-action\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\nimport { addContact } from \"redux/contacts/contacts-operation\";\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handlerChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onSaveContact = (e) => {\n    e.preventDefault();\n\n    const newContactName = e.target.name.value.toUpperCase();\n    const knownContactToName = contacts.find(\n      ({ name }) => name.toUpperCase() === newContactName\n    );\n\n    if (knownContactToName) {\n      return alert(`${newContactName} is already in contacts.`);\n    }\n\n    const newContact = { name, phone: number };\n    setName(\"\");\n    setNumber(\"\");\n\n    // ? GlobalState - add new Contact\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <form className={s.form} onSubmit={onSaveContact}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handlerChange}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          className={s.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handlerChange}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import s from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-action\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <section className={s.container}>\n      <label>\n        Find contact by name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={filter}\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </section>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\nimport s from \"./ContactList.module.css\";\nimport { getVisibleContacts } from \"redux/contacts/contacts-selectors\";\nimport {\n  deleteContact,\n  getContactsAsync,\n} from \"redux/contacts/contacts-operation\";\n\nfunction ContactList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsAsync());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, phone: number }) => {\n          const tel = `tel:` + number.replace(/^(\\+)|\\D/g, \"$1\");\n          return (\n            <li key={id} className={s.item}>\n              <p>\n                {name}: <a href={tel}>{number}</a>\n              </p>\n              <button\n                className={s.button}\n                type=\"button\"\n                data-id={id}\n                onClick={(e) => {\n                  dispatch(deleteContact(e.currentTarget.dataset.id));\n                }}\n              >\n                <IoCloseCircleSharp />\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}