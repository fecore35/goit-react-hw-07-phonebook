{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","redux/contacts/contacts-operation.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccesses","getContactsError","deleteContactRequest","deleteContactSuccesses","deleteContactError","createContact","changeFilter","itemsReducer","createReducer","_","action","payload","state","filter","item","id","isLoading","itemsError","filterReducer","contactsReducer","combineReducers","items","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","next","console","log","store","configureStore","reducer","contacts","devTools","getContacts","getFilter","getVisibleContacts","search","toUpperCase","contact","name","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","handlerChange","event","target","value","className","s","form","onSubmit","e","preventDefault","newContactName","find","alert","newContact","uuidv4","label","type","input","pattern","title","required","onChange","button","Filter","container","ContactList","visibleContacts","useEffect","actions","fetch","then","data","json","catch","list","map","phone","tel","replace","href","onClick","method","deleteContact","currentTarget","dataset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f393b76b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getContactsRequest = createAction(\"contacts/GetContactsRequest\");\nexport const getContactsSuccesses = createAction(\n  \"contacts/GetContactsSuccesses\"\n);\nexport const getContactsError = createAction(\"contacts/GetContactsError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccesses = createAction(\n  \"contacts/deleteContactSuccesses\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const createContact = createAction(\"contacts/Create\");\nexport const changeFilter = createAction(\"contacts/Filter\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  getContactsRequest,\n  getContactsSuccesses,\n  getContactsError,\n  deleteContactRequest,\n  deleteContactSuccesses,\n  deleteContactError,\n  createContact,\n  changeFilter,\n} from \"../contacts/contacts-action\";\n\nconst itemsReducer = createReducer([], {\n  [getContactsSuccesses]: (_, action) => [...action.payload],\n  [createContact]: (state, action) => [action.payload, ...state],\n  [deleteContactSuccesses]: (state, action) =>\n    state.filter((item) => item.id !== action.payload.id),\n});\n\nconst isLoading = createReducer(false, {\n  /* Get */\n  [getContactsRequest]: () => true,\n  [getContactsSuccesses]: () => false,\n  [getContactsError]: () => false,\n\n  /* Delete */\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccesses]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst itemsError = createReducer(null, {\n  [getContactsError]: (_, action) => action.payload,\n  [deleteContactError]: (_, action) => action.payload,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (state, action) => action.payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading,\n  error: itemsError,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\n\nconst firstMiddleware = (state) => (next) => (action) => {\n  console.log(\"firstMiddleware-> \", action);\n  next(action);\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  firstMiddleware,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: true ?? process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","export const getContacts = (state) => state.contacts.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const search = filter.toUpperCase();\n  return contacts.filter((contact) =>\n    contact.name.toUpperCase().includes(search)\n  );\n};\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createContact } from \"redux/contacts/contacts-action\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handlerChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onSaveContact = (e) => {\n    e.preventDefault();\n\n    const newContactName = e.target.name.value.toUpperCase();\n    const knownContactToName = contacts.find(\n      ({ name }) => name.toUpperCase() === newContactName\n    );\n\n    if (knownContactToName) {\n      return alert(`${newContactName} is already in contacts.`);\n    }\n\n    const newContact = { id: uuidv4(), name, number };\n    setName(\"\");\n    setNumber(\"\");\n\n    // ? GlobalState - add new Contact\n    dispatch(createContact(newContact));\n  };\n\n  return (\n    <form className={s.form} onSubmit={onSaveContact}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handlerChange}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          className={s.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handlerChange}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import s from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-action\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <section className={s.container}>\n      <label>\n        Find contact by name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={filter}\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </section>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\nimport s from \"./ContactList.module.css\";\nimport { getVisibleContacts } from \"redux/contacts/contacts-selectors\";\nimport { getContacts, deleteContact } from \"redux/contacts/contacts-operation\";\n\nfunction ContactList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, phone: number }) => {\n          const tel = `tel:` + number.replace(/^(\\+)|\\D/g, \"$1\");\n          return (\n            <li key={id} className={s.item}>\n              <p>\n                {name}: <a href={tel}>{number}</a>\n              </p>\n              <button\n                className={s.button}\n                type=\"button\"\n                data-id={id}\n                onClick={(e) => {\n                  dispatch(deleteContact(e.currentTarget.dataset.id));\n                }}\n              >\n                <IoCloseCircleSharp />\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import * as actions from \"redux/contacts/contacts-action\";\n\nexport const getContacts = () => (dispatch) => {\n  dispatch(actions.getContactsRequest());\n\n  fetch(\"https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts\")\n    .then((data) => data.json())\n    .then((data) => {\n      dispatch(actions.getContactsSuccesses(data));\n    })\n    .catch((error) => dispatch(actions.getContactsError(error)));\n};\n\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n\n  fetch(`https://619416bd0b39a70017b1570d.mockapi.io/api/v1/contacts/${id}`, {\n    method: \"DELETE\",\n  })\n    .then((data) => data.json())\n    .then((data) => {\n      console.log(data);\n      dispatch(actions.deleteContactSuccesses(data));\n    })\n    .catch((error) => dispatch(actions.deleteContactError(error)));\n};\n","import ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}